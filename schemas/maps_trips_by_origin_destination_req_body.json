{
    "title": "TripsByOriginAndDestinationRequestBody",
    "required" : [ "destination", "origin" ],
    "type" : "object",
    "properties" : {
      "origin" : {
        "type" : "string",
        "description" : "Starting point of the trip at origin (departure). See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
        "example" : "8503000"
      },
      "destination" : {
        "type" : "string",
        "description" : "Ending point of the trip at destination (arrival). See **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
        "example" : "[7.435194,46.945679]"
      },
      "originRadius" : {
        "type" : "integer",
        "description" : "Tolerated walk distance (radius [m]) at `Place` origin (departure). Default is 1500",
        "format" : "int32",
        "example" : 800
      },
      "destinationRadius" : {
        "type" : "integer",
        "description" : "Tolerated walk distance (radius [m]) at `Place` destination (arrival). Default is 1500",
        "format" : "int32",
        "example" : 1500
      },
      "forArrival" : {
        "type" : "boolean",
        "description" : "Search for arriving (true) or departing (false) trips.",
        "default" : false
      },
      "date" : {
        "type" : "string",
        "description" : "(Local) date at either origin (`forArrival`=false) or destination (`forArrival`=true) related to `time`, defaults to TODAY.",
        "format" : "date",
        "example" : "2023-04-18"
      },
      "time" : {
        "type" : "string",
        "description" : "Local time at either origin (`forArrival`=false) or destination (`forArrival`=true) related to `date`, defaults to NOW (seconds will be ignored).",
        "format" : "time",
        "example" : "13:07"
      },
      "occupancyAverage" : {
        "$ref" : "#/components/schemas/OccupancyAverageEnum"
      },
      "mobilityFilter" : {
        "$ref" : "#/components/schemas/TripMobilityFilter"
      },
      "vias" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PTViaReference"
        }
      },
      "viasNot" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PTViaNotReference"
        }
      },
      "viasNoTransfer" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PTViaNoChangeAtReference"
        }
      },
      "realtimeMode" : {
        "$ref" : "#/components/schemas/RealtimeModeEnum"
      },
      "pagingCursor" : {
        "type" : "string",
        "description" : "Based on a returned `TripResponse::pagingCursor`, `previous` or `next` connections **reusing the very same search-parameters** can be retrieved by scrolling pagination mechanisme, see `Trip::pagingChecksum`)."
      },
      "optimisationMethod" : {
        "$ref" : "#/components/schemas/OptimisationMethod"
      },
      "includeAccessibility" : {
        "$ref" : "#/components/schemas/AccessibilityEnum"
      },
      "includeAlternateMatch" : {
        "$ref" : "#/components/schemas/AlternateMatchEnum"
      },
      "includeNoticeAttributes" : {
        "uniqueItems" : true,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/NoticeAttributeEnum"
        }
      },
      "includeEconomic" : {
        "type" : "boolean",
        "description" : "Consider additional connections by Bus or S-Bahn leading to destination as well (de:'Zus√§tzliche Alternativverbindungen', 'Mehrdimensionale Suche', 'Preiswerte Suche').<br>This parameter has an impact on performance and/or response volume, set wisely!",
        "default" : false
      },
      "includeUnsharp" : {
        "type" : "boolean",
        "description" : "Consider alternative stations origin/destination (de: Erweiterte Anzeige).",
        "default" : false
      },
      "includeEarlier" : {
        "type" : "boolean",
        "description" : "Consider earlier leaving connections, even if arrival is later.",
        "default" : false
      },
      "includeEcologyComparison" : {
        "type" : "string",
        "description" : "Create Trip::EcoBalance (C02, ..) per Trip. DEFAULT is based on SBB default car eco-params.<br>x-extensible-enum: ",
        "enum" : [ "NONE", "DEFAULT" ],
        "default" : "NONE"
      },
      "includeTransportModes" : {
        "uniqueItems" : true,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/TransportModeEnum"
        }
      },
      "includeOperatingDays" : {
        "type" : "boolean",
        "description" : "`Trip::operatingPeriods` will always be returned if it is a **repeatable planned Trip over the period**. To enforce concrete planned dates in `OperatingPeriod::operatingDays`set `includeOperatingDays=true` (PTRideLeg::serviceJourney::operationPeriods will remain empty, because whole Trip is of interest).<br>This parameter has an impact on performance and/or response volume, set wisely!",
        "default" : false
      },
      "includeRouteProjection" : {
        "type" : "boolean",
        "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
        "default" : false
      },
      "includeGroupReservation" : {
        "type" : "string",
        "description" : "Relates to `PTRideLeg::groupReservationStatus`. Include the status for group-reservation possibilities (source CAPRE).<br>Format 'x:y' which means to check reservation status for number of x passenger in first class and y passengers in second class.<br>Needs specific GRANT rights, do not specify unless you have them!<br>This parameter has an impact on performance and/or response volume, set wisely! `ServiceJourney::notices` will get an entry of `type=INFO, key=RN` if available, its `Notice::value` is relevant for Postauto AG (PAG) operations-reference.",
        "example" : "5:7"
      },
      "includeSummary" : {
        "type" : "boolean",
        "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
        "default" : false
      },
      "includeIntermediateStops" : {
        "type" : "string",
        "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
        "enum" : [ "ALL", "BOARDING_ALIGHTING", "NONE" ],
        "default" : "ALL"
      },
      "includeTrainStopAssignments" : {
        "$ref" : "#/components/schemas/TrainStopAssignmentsEnum"
      },
      "excludeDatedVehicleJourneys" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DatedVehicleJourneyReference"
        }
      },
      "excludeFootpathAtOriginAndDestination" : {
        "type" : "boolean",
        "description" : "In case of `StopPlace` to `StopPlace` at origin and/or destination set true to prevent `AccessLeg's` at beginning or end.",
        "default" : false
      }
    },
    "description" : "Request parameters (POST body). OJP passive instance requires Stop UIC like '850700' whereas active instance enforces 'OJP:STOP:SBB:8507000|Bern'."
  }